<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd 
	http://www.springframework.org/schema/task 
	http://www.springframework.org/schema/task/spring-task-3.0.xsd">

    <aop:config proxy-target-class="true"></aop:config>
    
	<!-- 使用MethodInvokingJobDetailFactoryBean，任务类可以不实现Job接口，通过targetMethod指定调用方法 -->
	<bean id="taskJob" class="com.zhiluniao.jobs.tasks.CollectTask">
	    <property name="startPage">
	         <value>${download.task.startPage}</value>
	    </property>
	    <property name="endPage">
	         <value>${download.task.endPage}</value>
	    </property>
	    <property name="savePath">
	         <value>${download.task.savePath}</value>
	    </property>
	</bean>
	<bean id="jobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="group" value="job_work" />
		<property name="name" value="download_html" />
		<!--false表示等上一个任务执行完后再开启新的任务 -->
		<property name="concurrent" value="false" />
		<property name="targetObject">
			<ref bean="taskJob" />
		</property>
		<property name="targetMethod">
			<value>run</value>
		</property>
	</bean>
	<!-- 调度触发器 -->
	<bean id="myTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="name" value="work_default_name" />
		<property name="group" value="work_default" />
		<property name="jobDetail">
			<ref bean="jobDetail" />
		</property>
		<property name="cronExpression">
			<value>${download.task.trigger}</value>
		</property>
	</bean>
	
	<bean id="loadJob" class="com.zhiluniao.jobs.tasks.LoadTask" />
	<bean id="loadJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="group" value="load_work" />
		<property name="name" value="load_data_into_database" />
		<!--false表示等上一个任务执行完后再开启新的任务 -->
		<property name="concurrent" value="false" />
		<property name="targetObject">
			<ref bean="loadJob" />
		</property>
		<property name="targetMethod">
			<value>run</value>
		</property>
	</bean>
	<!-- 调度触发器 -->
	<bean id="loadTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="name" value="load_data_trigger" />
		<property name="group" value="work_default" />
		<property name="jobDetail">
			<ref bean="loadJobDetail"/>
		</property>
		<property name="cronExpression">
			<value>${load.task.trigger}</value>
		</property>
	</bean>
	
    <bean id="loadJob2" class="com.zhiluniao.jobs.tasks.LoadNotDownloadTask" />
	<bean id="loadJob2Detail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="group" value="load_work2" />
		<property name="name" value="load_data_into_database2" />
		<!--false表示等上一个任务执行完后再开启新的任务 -->
		<property name="concurrent" value="false" />
		<property name="targetObject">
			<ref bean="loadJob2" />
		</property>
		<property name="targetMethod">
			<value>run</value>
		</property>
	</bean>
	<!-- 调度触发器 -->
	<bean id="loadTrigger2"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="name" value="load_data_trigger2" />
		<property name="group" value="work_default" />
		<property name="jobDetail">
			<ref bean="loadJob2Detail"/>
		</property>
		<property name="cronExpression">
			<value>0 * * * * ?</value>
		</property>
	</bean>
	
	
	<!-- 调度工厂 -->
	<bean id="scheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="myTrigger" />
				<ref bean="loadTrigger"/>
				<ref bean="loadTrigger2"/>
			</list>
		</property>
	</bean>

</beans>